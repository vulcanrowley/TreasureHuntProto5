{"version":3,"sources":["webpack://Dungeon/webpack/universalModuleDefinition","webpack://Dungeon/webpack/bootstrap","webpack://Dungeon/../node_modules/webpack/buildin/amd-define.js","webpack://Dungeon/../node_modules/webpack/buildin/module.js","webpack://Dungeon/../node_modules/webpack/buildin/amd-options.js","webpack://Dungeon/../node_modules/seedrandom/index.js","webpack://Dungeon/../node_modules/seedrandom/lib/alea.js","webpack://Dungeon/../node_modules/seedrandom/lib/xor128.js","webpack://Dungeon/../node_modules/seedrandom/lib/xorwow.js","webpack://Dungeon/../node_modules/seedrandom/lib/xorshift7.js","webpack://Dungeon/../node_modules/seedrandom/lib/xor4096.js","webpack://Dungeon/../node_modules/seedrandom/lib/tychei.js","webpack://Dungeon/../node_modules/seedrandom/seedrandom.js","webpack://Dungeon/crypto (ignored)","webpack://Dungeon/./random.ts","webpack://Dungeon/./tiles.ts","webpack://Dungeon/./create-2d-array.ts","webpack://Dungeon/./room.ts","webpack://Dungeon/./debug.ts","webpack://Dungeon/./math.ts","webpack://Dungeon/./dungeon.ts","webpack://Dungeon/./index.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;ACrBA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,oBAAoB;AACpB,0BAA0B;;AAE1B;AACA;AACA;AACA,WAAW,mBAAO,CAAC,CAAY;;AAE/B;AACA;AACA;AACA,aAAa,mBAAO,CAAC,CAAc;;AAEnC;AACA;AACA;AACA,aAAa,mBAAO,CAAC,CAAc;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAO,CAAC,CAAiB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,CAAe;;AAErC;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,CAAc;;AAEnC;AACA;AACA,SAAS,mBAAO,CAAC,EAAc;;AAE/B;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;;AAEA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA,kBAAkB,YAAY;AAC9B;AACA,kBAAkB,YAAY;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,sCAAsC;AACjE;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,8CAA8C;AAC9C;;AAEA;AACA;;;AAGA;AACA;AACA,CAAC,UAAU,sBAAM,IAAI,sBAAU;AAC/B,EAAE,mCAAO,YAAY,aAAa,EAAE;AAAA,oGAAC;AACrC,CAAC;AACD;AACA;;AAEA,CAAC;AACD;AACA,EAAE,KAA2B;AAC7B,EAAE,sBAAuC;AACzC;;;;;;;;;;AC/GA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,CAAC,UAAU,sBAAM,IAAI,sBAAU;AAC/B,EAAE,mCAAO,YAAY,aAAa,EAAE;AAAA,oGAAC;AACrC,CAAC;AACD;AACA;;AAEA,CAAC;AACD;AACA,EAAE,KAA2B;AAC7B,EAAE,sBAAuC;AACzC;;;;;;;;;;AC9EA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,aAAa,aAAa;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,CAAC,UAAU,sBAAM,IAAI,sBAAU;AAC/B,EAAE,mCAAO,YAAY,aAAa,EAAE;AAAA,oGAAC;AACrC,CAAC;AACD;AACA;;AAEA,CAAC;AACD;AACA,EAAE,KAA2B;AAC7B,EAAE,sBAAuC;AACzC;;;;;;;;;;ACnFA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC,8BAA8B;;AAE9B;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,CAAC,UAAU,sBAAM,IAAI,sBAAU;AAC/B,EAAE,mCAAO,YAAY,aAAa,EAAE;AAAA,oGAAC;AACrC,CAAC;AACD;AACA;;AAEA,CAAC;AACD;AACA,EAAE,KAA2B;AAC7B,EAAE,sBAAuC;AACzC;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,8CAA8C;AAC9C,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,oCAAoC;AACpC,iCAAiC;AACjC;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,CAAC,UAAU,sBAAM,IAAI,sBAAU;AAC/B,EAAE,mCAAO,YAAY,aAAa,EAAE;AAAA,oGAAC;AACrC,CAAC;AACD;AACA;;AAEA,CAAC;AACD;AACA,EAAE,KAA2B;AAC7B,EAAE,sBAAuC;AACzC;;;;;;;;ACjJA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB,EAAE;AAClD;AACA;AACA;;AAEA;AACA;AACA,CAAC,UAAU,sBAAM,IAAI,sBAAU;AAC/B,EAAE,mCAAO,YAAY,aAAa,EAAE;AAAA,oGAAC;AACrC,CAAC;AACD;AACA;;AAEA,CAAC;AACD;AACA,EAAE,KAA2B;AAC7B,EAAE,sBAAuC;AACzC;;;;;;;;;;ACpGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB,iBAAiB;;AAElE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,8BAA8B;AAC9B,0BAA0B;AAC1B,iBAAiB;AACjB,oBAAoB;AACpB;AACA,2BAA2B;AAC3B,aAAa;AACb,aAAa;AACb,eAAe;AACf;AACA,uBAAuB;AACvB;;AAEA,2BAA2B,sBAAsB;AACjD,2BAA2B,gCAAgC;AAC3D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA,mCAAmC,qBAAqB,EAAE;AAC1D;;AAEA;AACA;AACA,2BAA2B,sBAAsB,aAAa;;AAE9D;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,kBAAkB;;AA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","file":"dungeon.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Dungeon\"] = factory();\n\telse\n\t\troot[\"Dungeon\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","module.exports = function() {\n\tthrow new Error(\"define cannot be used indirect\");\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","/* (ignored) */","import * as seedrandom from \"seedrandom\";\r\n\r\nexport default class Random {\r\n  private rng: seedrandom.prng;\r\n\r\n  constructor(seedValue?: string) {\r\n    this.rng = seedrandom(seedValue);\r\n  }\r\n\r\n  randomInteger(min: number, max: number, { onlyOdd = false, onlyEven = false } = {}) {\r\n    if (onlyOdd) return this.randomOddInteger(min, max);\r\n    else if (onlyEven) return this.randomEvenInteger(min, max);\r\n    else return Math.floor(this.rng() * (max - min + 1) + min);\r\n  }\r\n\r\n  randomEvenInteger(min: number, max: number) {\r\n    if (min % 2 !== 0 && min < max) min++;\r\n    if (max % 2 !== 0 && max > min) max--;\r\n    const range = (max - min) / 2;\r\n    return Math.floor(this.rng() * (range + 1)) * 2 + min;\r\n  }\r\n\r\n  randomOddInteger(min: number, max: number) {\r\n    if (min % 2 === 0) min++;\r\n    if (max % 2 === 0) max--;\r\n    const range = (max - min) / 2;\r\n    return Math.floor(this.rng() * (range + 1)) * 2 + min;\r\n  }\r\n\r\n  randomPick<T>(array: T[]): T {\r\n    return array[this.randomInteger(0, array.length - 1)];\r\n  }\r\n}\r\n","enum TILES {\r\n  EMPTY = 0,\r\n  WALL = 1,\r\n  FLOOR = 2,\r\n  DOOR = 3\r\n}\r\n\r\ntype DebugTileMap = {\r\n  empty?: number | string;\r\n  wall?: number | string;\r\n  floor?: number | string;\r\n  door?: number | string;\r\n};\r\n\r\nexport default TILES;\r\nexport { DebugTileMap };\r\n","/**\r\n * Creates a 2D array of width x height, filled with the given value.\r\n */\r\nexport default function create2DArray<T>(width: number, height: number, value?: T): T[][] {\r\n  return [...Array(height)].map(() => Array(width).fill(value));\r\n}\r\n","import TILES from \"./tiles\";\r\nimport Point from \"./point\";\r\nimport create2DArray from \"./create-2d-array\";\r\n\r\nexport default class Room {\r\n  private tiles: TILES[][];\r\n  public x = 0;\r\n  public y = 0;\r\n  public left = 0;\r\n  public right = 0;\r\n  public top = 0;\r\n  public bottom = 0;\r\n  public centerX = 0;\r\n  public centerY = 0;\r\n\r\n  constructor(public width: number, public height: number) {\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.setPosition(0, 0);\r\n\r\n    this.tiles = create2DArray<TILES>(width, height, TILES.FLOOR);\r\n\r\n    // Place walls around edges of room.\r\n    for (let y = 0; y < this.height; y++) {\r\n      this.setTileAt(0, y, TILES.WALL);\r\n      this.setTileAt(width - 1, y, TILES.WALL);\r\n    }\r\n    for (let x = 0; x < this.width; x++) {\r\n      this.setTileAt(x, 0, TILES.WALL);\r\n      this.setTileAt(x, height - 1, TILES.WALL);\r\n    }\r\n  }\r\n\r\n  public forEachTile(fn: (p: Point, t: TILES) => void) {\r\n    for (let y = 0; y < this.height; y++) {\r\n      for (let x = 0; x < this.width; x++) {\r\n        fn({ x, y }, this.getTileAt(x, y));\r\n      }\r\n    }\r\n  }\r\n\r\n  public setPosition(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.left = x;\r\n    this.right = x + (this.width - 1);\r\n    this.top = y;\r\n    this.bottom = y + (this.height - 1);\r\n    this.centerX = x + Math.floor(this.width / 2);\r\n    this.centerY = y + Math.floor(this.height / 2);\r\n  }\r\n\r\n  public getDoorLocations(): Point[] {\r\n    const doors = [];\r\n    for (let y = 0; y < this.height; y++) {\r\n      for (let x = 0; x < this.width; x++) {\r\n        if (this.getTileAt(x, y) == TILES.DOOR) {\r\n          doors.push({ x, y });\r\n        }\r\n      }\r\n    }\r\n    return doors;\r\n  }\r\n\r\n  public overlaps(otherRoom: Room) {\r\n    if (this.right < otherRoom.left) return false;\r\n    else if (this.left > otherRoom.right) return false;\r\n    else if (this.bottom < otherRoom.top) return false;\r\n    else if (this.top > otherRoom.bottom) return false;\r\n    else return true;\r\n  }\r\n\r\n  /**\r\n   * Check if the given local coordinates are within the dimensions of the room.\r\n   * @param x\r\n   * @param y\r\n   */\r\n  public isInBounds(x: number, y: number) {\r\n    return x >= 0 && x < this.width - 1 && y >= 0 && y < this.height - 1;\r\n  }\r\n\r\n  /**\r\n   * Get the tile at the given local coordinates of the room.\r\n   * @param x\r\n   * @param y\r\n   */\r\n  public getTileAt(x: number, y: number): TILES {\r\n    return this.tiles[y][x];\r\n  }\r\n\r\n  /**\r\n   * Set the tile at the given local coordinates of the room.\r\n   * @param x\r\n   * @param y\r\n   * @param tile\r\n   */\r\n  public setTileAt(x: number, y: number, tile: TILES) {\r\n    this.tiles[y][x] = tile;\r\n  }\r\n\r\n  /**\r\n   * Check if two rooms share a door between them.\r\n   * @param otherRoom\r\n   */\r\n  public isConnectedTo(otherRoom: Room) {\r\n    const doors = this.getDoorLocations();\r\n    for (const d of doors) {\r\n      // Find door position relative to otherRoom's local coordinate system.\r\n      const dx = this.x + d.x - otherRoom.x;\r\n      const dy = this.y + d.y - otherRoom.y;\r\n\r\n      if (otherRoom.isInBounds(dx, dy) && otherRoom.getTileAt(dx, dy) === TILES.DOOR) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import TILES from \"./tiles\";\r\nimport Dungeon from \"./dungeon\";\r\n\r\ntype AttributesObject = { [key: string]: string };\r\n\r\nconst attributesToHtmlString = (attrObj: AttributesObject) =>\r\n  Object.entries(attrObj)\r\n    .map(([key, val]) => `${key}=\"${val}\"`)\r\n    .join(\" \");\r\n\r\n// Debug by dumping a table to the console where each element in the map is the number of rooms in\r\n// that location\r\nexport function debugRoomGrid(dungeon: Dungeon) {\r\n  const table = dungeon.roomGrid.map(row => row.map(elem => `${elem.length}`.padStart(2)));\r\n  console.log(table.map(row => row.join(\" \")).join(\"\\n\"));\r\n}\r\n\r\n// Debug by dumping the dungeon into an HTML fragment that can be inserted into HTML. The structure\r\n// is:\r\n//  <pre>\r\n//    <table>\r\n//      <tbody>\r\n//        <tr>   <td>#</td> <td>#</td> <td>#</td> <td>#</td>   </tr>\r\n//        <tr>   <td>#</td> <td> </td> <td> </td> <td>#</td>   </tr>\r\n//        <tr>   <td>#</td> <td> </td> <td> </td> <td>/</td>   </tr>\r\n//        <tr>   <td>#</td> <td> </td> <td> </td> <td>#</td>   </tr>\r\n//        <tr>   <td>#</td> <td>#</td> <td>#</td> <td>#</td>   </tr>\r\n//      </tbody>\r\n//    </table>\r\n//  </pre>\r\n\r\nexport type DebugHtmlConfig = {\r\n  empty?: string;\r\n  emptyAttributes?: AttributesObject;\r\n  wall?: string;\r\n  wallAttributes?: AttributesObject;\r\n  floor?: string;\r\n  floorAttributes?: AttributesObject;\r\n  door?: string;\r\n  doorAttributes?: AttributesObject;\r\n  containerAttributes?: AttributesObject;\r\n};\r\ntype DebugHtmlConfigRequired = Required<DebugHtmlConfig>;\r\n\r\nexport function debugHtmlStringMap(dungeon: Dungeon, config: DebugHtmlConfig = {}) {\r\n  const c: DebugHtmlConfigRequired = Object.assign(\r\n    {},\r\n    {\r\n      empty: \" \",\r\n      emptyAttributes: { class: \"dungeon__empty\" },\r\n      wall: \"#\",\r\n      wallAttributes: { class: \"dungeon__wall\" },\r\n      floor: \"_\",\r\n      floorAttributes: { class: \"dungeon__wall\" },\r\n      door: \".\",\r\n      doorAttributes: { class: \"dungeon__door\" },\r\n      containerAttributes: { class: \"dungeon\" }\r\n    },\r\n    config\r\n  );\r\n\r\n  const tiles = dungeon.getMappedTiles({\r\n    empty: `<td ${attributesToHtmlString(c.emptyAttributes)}>${c.empty}</td>`,\r\n    floor: `<td ${attributesToHtmlString(c.floorAttributes)}>${c.floor}</td>`,\r\n    door: `<td ${attributesToHtmlString(c.doorAttributes)}>${c.door}</td>`,\r\n    wall: `<td ${attributesToHtmlString(c.wallAttributes)}>${c.wall}</td>`\r\n  });\r\n\r\n  const tilesHtml = tiles.map(row => `<tr>${row.join(\"\")}</tr>`).join(\"\");\r\n  const htmlString = `<pre ${attributesToHtmlString(\r\n    c.containerAttributes\r\n  )}><table><tbody>${tilesHtml}</tbody></table></pre>`;\r\n\r\n  return htmlString;\r\n}\r\n\r\nexport function debugHtmlMap(dungeon: Dungeon, config: DebugHtmlConfig = {}) {\r\n  const htmlString = debugHtmlStringMap(dungeon, config);\r\n  const htmlFragment = document.createRange().createContextualFragment(htmlString);\r\n  return htmlFragment;\r\n}\r\n\r\n// Debug by returning a colored(!) table string where each tile in the map is represented with an\r\n// ASCII string\r\nexport type DebugConsoleConfig = {\r\n  empty?: string;\r\n  emptyColor?: string;\r\n  wall?: string;\r\n  wallColor?: string;\r\n  floor?: string;\r\n  floorColor?: string;\r\n  door?: string;\r\n  doorColor?: string;\r\n  fontSize?: string;\r\n};\r\ntype DebugConsoleConfigRequired = Required<DebugConsoleConfig>;\r\nexport function debugMap(dungeon: Dungeon, config: DebugConsoleConfig = {}) {\r\n  const c: DebugConsoleConfigRequired = Object.assign(\r\n    {},\r\n    {\r\n      empty: \" \",\r\n      emptyColor: \"rgb(0, 0, 0)\",\r\n      wall: \"#\",\r\n      wallColor: \"rgb(255, 0, 0)\",\r\n      floor: \"_\",\r\n      floorColor: \"rgb(210, 210, 210)\",\r\n      door: \".\",\r\n      doorColor: \"rgb(0, 0, 255)\",\r\n      fontSize: \"15px\"\r\n    },\r\n    config\r\n  );\r\n\r\n  let string = \"\";\r\n  let styles = [];\r\n\r\n  // First line in the browser console window has console line mapping (e.g. \"dungeon.js:724\") which\r\n  // throws off the table. Kill two birds by displaying a guide on the first two lines.\r\n  string += `Dungeon: the console window should be big enough to see all of the guide on the next line:\\n`;\r\n  string += `%c|${\"=\".repeat(dungeon.width * 2 - 2)}|\\n\\n`;\r\n  styles.push(`font-size: ${c.fontSize}`);\r\n\r\n  for (let y = 0; y < dungeon.height; y += 1) {\r\n    for (let x = 0; x < dungeon.width; x += 1) {\r\n      const tile = dungeon.tiles[y][x];\r\n      if (tile === TILES.EMPTY) {\r\n        string += `%c${c.empty}`;\r\n        styles.push(`color: ${c.emptyColor}; font-size: ${c.fontSize}`);\r\n      } else if (tile === TILES.WALL) {\r\n        string += `%c${c.wall}`;\r\n        styles.push(`color: ${c.wallColor}; font-size: ${c.fontSize}`);\r\n      } else if (tile === TILES.FLOOR) {\r\n        string += `%c${c.floor}`;\r\n        styles.push(`color: ${c.floorColor}; font-size: ${c.fontSize}`);\r\n      } else if (tile === TILES.DOOR) {\r\n        string += `%c${c.door}`;\r\n        styles.push(`color: ${c.doorColor}; font-size: ${c.fontSize}`);\r\n      }\r\n      string += \" \";\r\n    }\r\n    string += \"\\n\";\r\n  }\r\n  console.log(string, ...styles);\r\n}\r\n","function isEven(value: number) {\r\n  return Number.isInteger(value) && value % 2 === 0;\r\n}\r\n\r\nfunction isOdd(value: number) {\r\n  return Number.isInteger(value) && value % 2 !== 0;\r\n}\r\n\r\nexport { isEven, isOdd };\r\n","import Random from \"./random\";\r\nimport Room from \"./room\";\r\nimport TILES, { DebugTileMap } from \"./tiles\";\r\nimport { debugMap, debugHtmlMap, DebugHtmlConfig, DebugConsoleConfig } from \"./debug\";\r\nimport create2DArray from \"./create-2d-array\";\r\nimport Point from \"./point\";\r\nimport { isOdd, isEven } from \"./math\";\r\n\r\ntype DimensionConfig = { min: number; max: number; onlyOdd?: boolean; onlyEven?: boolean };\r\ntype DimensionConfigRequired = Required<DimensionConfig>;\r\ntype RoomConfig = {\r\n  width: DimensionConfig;\r\n  height: DimensionConfig;\r\n  maxArea?: number;\r\n  maxRooms?: number;\r\n};\r\nexport type DungeonConfig = {\r\n  width: number;\r\n  height: number;\r\n  randomSeed?: string;\r\n  doorPadding?: number;\r\n  rooms: RoomConfig;\r\n};\r\n\r\nexport default class Dungeon {\r\n  public height: number;\r\n  public width: number;\r\n  public tiles: TILES[][];\r\n  public rooms: Room[] = [];\r\n  private doorPadding: number;\r\n  private r: Random;\r\n  // 2D grid matching map dimensions where every element contains an array of all the rooms in\r\n  // that location.\r\n  public roomGrid: Room[][][] = [];\r\n  private maxRooms: number;\r\n  private maxRoomArea: number;\r\n  private roomWidthConfig: DimensionConfigRequired;\r\n  private roomHeightConfig: DimensionConfigRequired;\r\n  private randomSeed?: string;\r\n\r\n  constructor(config: DungeonConfig) {\r\n    this.width = config.width;\r\n    this.height = config.height;\r\n    this.doorPadding = config.doorPadding ?? 1;\r\n    this.rooms = [];\r\n    this.randomSeed = config.randomSeed;\r\n    this.r = new Random(this.randomSeed);\r\n\r\n    const rooms = config.rooms;\r\n    const roomWidth = rooms.width;\r\n    const roomHeight = rooms.height;\r\n    const maxPossibleRoomArea = roomWidth.max * roomHeight.max;\r\n    const minPossibleRoomArea = roomWidth.min * roomHeight.min;\r\n    const maxPossibleRooms = Math.floor((this.width * this.height) / minPossibleRoomArea);\r\n    this.roomWidthConfig = {\r\n      min: roomWidth.min,\r\n      max: roomWidth.max,\r\n      onlyOdd: roomWidth.onlyOdd ?? false,\r\n      onlyEven: roomWidth.onlyEven ?? false\r\n    };\r\n    this.roomHeightConfig = {\r\n      min: roomHeight.min,\r\n      max: roomHeight.max,\r\n      onlyOdd: roomHeight.onlyOdd ?? false,\r\n      onlyEven: roomHeight.onlyEven ?? false\r\n    };\r\n    this.maxRooms = rooms.maxRooms ?? maxPossibleRooms;\r\n    this.maxRoomArea = rooms.maxArea ?? maxPossibleRoomArea;\r\n\r\n    this.adjustDimensionConfigForParity(this.roomWidthConfig);\r\n    this.adjustDimensionConfigForParity(this.roomHeightConfig);\r\n    this.checkDimensionConfig(this.roomWidthConfig);\r\n    this.checkDimensionConfig(this.roomHeightConfig);\r\n\r\n    // Validate the room width and height settings.\r\n    if (this.roomWidthConfig.max > this.width) {\r\n      throw new Error(\"Room max width cannot exceed dungeon width.\");\r\n    }\r\n    if (this.roomHeightConfig.max > this.height) {\r\n      throw new Error(\"Room max height cannot exceed dungeon height.\");\r\n    }\r\n    // Validate the max area based on min dimensions.\r\n    if (this.maxRoomArea < minPossibleRoomArea) {\r\n      throw new Error(\"The minimum dimensions specified exceeds the given maxArea.\");\r\n    }\r\n\r\n    this.generate();\r\n    this.tiles = this.getTiles();\r\n  }\r\n\r\n  /**\r\n   * Adjust the given dimension config for parity settings (onlyOdd, onlyEven) so that min/max are\r\n   * adjusted to reflect actual possible values.\r\n   * @param dimensionConfig\r\n   */\r\n  private adjustDimensionConfigForParity(dimensionConfig: DimensionConfigRequired) {\r\n    if (dimensionConfig.onlyOdd) {\r\n      if (isEven(dimensionConfig.min)) {\r\n        dimensionConfig.min++;\r\n        console.log(\"Dungeon: warning, min dimension adjusted to match onlyOdd setting.\");\r\n      }\r\n      if (isEven(dimensionConfig.max)) {\r\n        dimensionConfig.max--;\r\n        console.log(\"Dungeon: warning, max dimension adjusted to match onlyOdd setting.\");\r\n      }\r\n    } else if (dimensionConfig.onlyEven) {\r\n      if (isOdd(dimensionConfig.min)) {\r\n        dimensionConfig.min++;\r\n        console.log(\"Dungeon: warning, min dimension adjusted to match onlyEven setting.\");\r\n      }\r\n      if (isOdd(dimensionConfig.max)) {\r\n        dimensionConfig.max--;\r\n        console.log(\"Dungeon: warning, max dimension adjusted to match onlyEven setting.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkDimensionConfig(dimensionConfig: DimensionConfigRequired) {\r\n    const { max, min, onlyEven, onlyOdd } = dimensionConfig;\r\n    if (onlyEven && onlyOdd) {\r\n      throw new Error(\"Cannot use both onlyEven and onlyOdd in room's width/height config.\");\r\n    }\r\n    if (max < min) {\r\n      throw new Error(\"Room width and height max must be >= min.\");\r\n    }\r\n    if (min < 3) {\r\n      throw new Error(\"Room width and height must be >= 3.\");\r\n    }\r\n  }\r\n\r\n  public getConfig(): DungeonConfig {\r\n    return {\r\n      width: this.width,\r\n      height: this.height,\r\n      doorPadding: this.doorPadding,\r\n      randomSeed: this.randomSeed,\r\n      rooms: {\r\n        width: this.roomWidthConfig,\r\n        height: this.roomHeightConfig,\r\n        maxArea: this.maxRoomArea,\r\n        maxRooms: this.maxRooms\r\n      }\r\n    };\r\n  }\r\n\r\n  public drawToConsole(config: DebugConsoleConfig) {\r\n    debugMap(this, config);\r\n  }\r\n\r\n  public drawToHtml(config: DebugHtmlConfig) {\r\n    return debugHtmlMap(this, config);\r\n  }\r\n\r\n  public getMappedTiles(tileMapping: DebugTileMap = {}) {\r\n    tileMapping = Object.assign({}, { empty: 0, wall: 1, floor: 2, door: 3 }, tileMapping);\r\n    return this.tiles.map(row =>\r\n      row.map(tile => {\r\n        if (tile === TILES.EMPTY) return tileMapping.empty;\r\n        else if (tile === TILES.WALL) return tileMapping.wall;\r\n        else if (tile === TILES.FLOOR) return tileMapping.floor;\r\n        else if (tile === TILES.DOOR) return tileMapping.door;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getCenter(): Point {\r\n    return {\r\n      x: Math.floor(this.width / 2),\r\n      y: Math.floor(this.height / 2)\r\n    };\r\n  }\r\n\r\n  public generate() {\r\n    this.rooms = [];\r\n    this.roomGrid = [];\r\n\r\n    for (let y = 0; y < this.height; y++) {\r\n      this.roomGrid.push([]);\r\n      for (let x = 0; x < this.width; x++) {\r\n        this.roomGrid[y].push([]);\r\n      }\r\n    }\r\n\r\n    // Seed the map with a starting randomly sized room in the center of the map.\r\n    const mapCenter = this.getCenter();\r\n    const room = this.createRandomRoom();\r\n    room.setPosition(\r\n      mapCenter.x - Math.floor(room.width / 2),\r\n      mapCenter.y - Math.floor(room.height / 2)\r\n    );\r\n    this.addRoom(room);\r\n\r\n    // Continue generating rooms until we hit our cap or have hit our maximum iterations (generally\r\n    // due to not being able to fit any more rooms in the map).\r\n    let attempts = 0;\r\n    const maxAttempts = this.maxRooms * 5;\r\n    while (this.rooms.length < this.maxRooms && attempts < maxAttempts) {\r\n      this.generateRoom();\r\n      attempts++;\r\n    }\r\n  }\r\n\r\n  public hasRoomAt(x: number, y: number) {\r\n    return x < 0 || y < 0 || x >= this.width || y >= this.height || this.roomGrid[y][x].length > 0;\r\n  }\r\n\r\n  public getRoomAt(x: number, y: number): Room | null {\r\n    if (this.hasRoomAt(x, y)) {\r\n      // Assumes 1 room per tile, which is valid for now\r\n      return this.roomGrid[y][x][0];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempt to add a room and return true/false based on whether it was successful.\r\n   * @param room\r\n   */\r\n  private addRoom(room: Room): Boolean {\r\n    if (!this.canFitRoom(room)) return false;\r\n    this.rooms.push(room);\r\n    // Update all tiles in the roomGrid to indicate that this room is sitting on them.\r\n    for (let y = room.top; y <= room.bottom; y++) {\r\n      for (let x = room.left; x <= room.right; x++) {\r\n        this.roomGrid[y][x].push(room);\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private canFitRoom(room: Room) {\r\n    // Make sure the room fits inside the dungeon.\r\n    if (room.x < 0 || room.right > this.width - 1) return false;\r\n    if (room.y < 0 || room.bottom > this.height - 1) return false;\r\n\r\n    // Make sure this room doesn't intersect any existing rooms.\r\n    for (let i = 0; i < this.rooms.length; i++) {\r\n      if (room.overlaps(this.rooms[i])) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private createRandomRoom(): Room {\r\n    let width = 0;\r\n    let height = 0;\r\n    let area = 0;\r\n\r\n    // Find width and height using min/max sizes while keeping under the maximum area.\r\n    const { roomWidthConfig, roomHeightConfig } = this;\r\n    do {\r\n      width = this.r.randomInteger(roomWidthConfig.min, roomWidthConfig.max, {\r\n        onlyEven: roomWidthConfig.onlyEven,\r\n        onlyOdd: roomWidthConfig.onlyOdd\r\n      });\r\n      height = this.r.randomInteger(roomHeightConfig.min, roomHeightConfig.max, {\r\n        onlyEven: roomHeightConfig.onlyEven,\r\n        onlyOdd: roomHeightConfig.onlyOdd\r\n      });\r\n      area = width * height;\r\n    } while (area > this.maxRoomArea);\r\n\r\n    return new Room(width, height);\r\n  }\r\n\r\n  private generateRoom() {\r\n    const room = this.createRandomRoom();\r\n\r\n    // Only allow 150 tries at placing the room\r\n    let i = 150;\r\n    while (i > 0) {\r\n      // Attempt to find another room to attach this one to\r\n      const result = this.findRoomAttachment(room);\r\n\r\n      room.setPosition(result.x, result.y);\r\n      // Try to add it. If successful, add the door between the rooms and break the loop.\r\n      if (this.addRoom(room)) {\r\n        const [door1, door2] = this.findNewDoorLocation(room, result.target);\r\n        this.addDoor(door1);\r\n        this.addDoor(door2);\r\n        break;\r\n      }\r\n\r\n      i -= 1;\r\n    }\r\n  }\r\n\r\n  public getTiles() {\r\n    const tiles = create2DArray<TILES>(this.width, this.height, TILES.EMPTY);\r\n    this.rooms.forEach(room => {\r\n      room.forEachTile((point, tile) => {\r\n        tiles[room.y + point.y][room.x + point.x] = tile;\r\n      });\r\n    });\r\n    return tiles;\r\n  }\r\n\r\n  private getPotentiallyTouchingRooms(room: Room) {\r\n    const touchingRooms: Room[] = [];\r\n\r\n    // function that checks the list of rooms at a point in our grid for any potential touching\r\n    // rooms\r\n    const checkRoomList = (x: number, y: number) => {\r\n      const r = this.roomGrid[y][x];\r\n      for (let i = 0; i < r.length; i++) {\r\n        // make sure this room isn't the one we're searching around and that it isn't already in the\r\n        // list\r\n        if (r[i] != room && touchingRooms.indexOf(r[i]) === -1) {\r\n          // make sure this isn't a corner of the room (doors can't go into corners)\r\n          const lx = x - r[i].x;\r\n          const ly = y - r[i].y;\r\n          if ((lx > 0 && lx < r[i].width - 1) || (ly > 0 && ly < r[i].height - 1)) {\r\n            touchingRooms.push(r[i]);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    // iterate the north and south walls, looking for other rooms in those tile locations\r\n    for (let x = room.x + 1; x < room.x + room.width - 1; x++) {\r\n      checkRoomList(x, room.y);\r\n      checkRoomList(x, room.y + room.height - 1);\r\n    }\r\n\r\n    // iterate the west and east walls, looking for other rooms in those tile locations\r\n    for (let y = room.y + 1; y < room.y + room.height - 1; y++) {\r\n      checkRoomList(room.x, y);\r\n      checkRoomList(room.x + room.width - 1, y);\r\n    }\r\n\r\n    return touchingRooms;\r\n  }\r\n\r\n  private findNewDoorLocation(room1: Room, room2: Room): [Point, Point] {\r\n    const door1 = { x: -1, y: -1 };\r\n    const door2 = { x: -1, y: -1 };\r\n\r\n    if (room1.y === room2.y - room1.height) {\r\n      // North\r\n      door1.x = door2.x = this.r.randomInteger(\r\n        Math.floor(Math.max(room2.left, room1.left) + this.doorPadding),\r\n        Math.floor(Math.min(room2.right, room1.right) - this.doorPadding)\r\n      );\r\n      door1.y = room1.y + room1.height - 1;\r\n      door2.y = room2.y;\r\n    } else if (room1.x == room2.x - room1.width) {\r\n      // West\r\n      door1.x = room1.x + room1.width - 1;\r\n      door2.x = room2.x;\r\n      door1.y = door2.y = this.r.randomInteger(\r\n        Math.floor(Math.max(room2.top, room1.top) + this.doorPadding),\r\n        Math.floor(Math.min(room2.bottom, room1.bottom) - this.doorPadding)\r\n      );\r\n    } else if (room1.x == room2.x + room2.width) {\r\n      // East\r\n      door1.x = room1.x;\r\n      door2.x = room2.x + room2.width - 1;\r\n      door1.y = door2.y = this.r.randomInteger(\r\n        Math.floor(Math.max(room2.top, room1.top) + this.doorPadding),\r\n        Math.floor(Math.min(room2.bottom, room1.bottom) - this.doorPadding)\r\n      );\r\n    } else if (room1.y == room2.y + room2.height) {\r\n      // South\r\n      door1.x = door2.x = this.r.randomInteger(\r\n        Math.floor(Math.max(room2.left, room1.left) + this.doorPadding),\r\n        Math.floor(Math.min(room2.right, room1.right) - this.doorPadding)\r\n      );\r\n      door1.y = room1.y;\r\n      door2.y = room2.y + room2.height - 1;\r\n    }\r\n\r\n    return [door1, door2];\r\n  }\r\n\r\n  private findRoomAttachment(room: Room) {\r\n    const r = this.r.randomPick(this.rooms);\r\n\r\n    let x = 0;\r\n    let y = 0;\r\n    const pad = 2 * this.doorPadding; // 2x padding to account for the padding both rooms need\r\n\r\n    // Randomly position this room on one of the sides of the random room.\r\n    switch (this.r.randomInteger(0, 3)) {\r\n      // north\r\n      case 0:\r\n        // x = r.left - (room.width - 1) would have rooms sharing exactly 1x tile\r\n        x = this.r.randomInteger(r.left - (room.width - 1) + pad, r.right - pad);\r\n        y = r.top - room.height;\r\n        break;\r\n      // west\r\n      case 1:\r\n        x = r.left - room.width;\r\n        y = this.r.randomInteger(r.top - (room.height - 1) + pad, r.bottom - pad);\r\n        break;\r\n      // east\r\n      case 2:\r\n        x = r.right + 1;\r\n        y = this.r.randomInteger(r.top - (room.height - 1) + pad, r.bottom - pad);\r\n        break;\r\n      // south\r\n      case 3:\r\n        x = this.r.randomInteger(r.left - (room.width - 1) + pad, r.right - pad);\r\n        y = r.bottom + 1;\r\n        break;\r\n    }\r\n\r\n    // Return the position for this new room and the target room\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      target: r\r\n    };\r\n  }\r\n\r\n  private addDoor(doorPos: Point) {\r\n    // Get all the rooms at the location of the door\r\n    const rooms = this.roomGrid[doorPos.y][doorPos.x];\r\n    rooms.forEach(room => {\r\n      room.setTileAt(doorPos.x - room.x, doorPos.y - room.y, TILES.DOOR);\r\n    });\r\n  }\r\n}\r\n","import Dungeon, { DungeonConfig } from \"./dungeon\";\r\nimport Point from \"./point\";\r\nimport Room from \"./room\";\r\nimport TILES, { DebugTileMap } from \"./tiles\";\r\nimport { DebugHtmlConfig, DebugConsoleConfig } from \"./debug\";\r\n\r\nexport default Dungeon;\r\nexport { DungeonConfig, Point, Room, TILES, DebugTileMap, DebugHtmlConfig, DebugConsoleConfig };\r\n"],"sourceRoot":""}